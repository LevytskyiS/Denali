1. Create Dockerfile

FROM python:3.10-slim
WORKDIR /app
COPY requirements.txt /app
RUN pip install -r requirements.txt
COPY . /app
CMD [ "python", "main.py" ]

2. Create docker image and push it to DockerHub

docker build . --platform=linux/amd64 -t pycoder7/denali:0.0.2
docker push pycoder7/denali:0.0.2

3. Login to server and pull the docker image

ssh root@192.168.11.123 - example - Login to server
asdqwezxc - password

if image is private, you need to login at dockerhub at server

docker run --name denali-bot -d pycoder7/denali:0.0.2

4. Stop and remove image if needed

DEPLOY TO FLY: 
fly launch
fly scale count 1 - чтобы работал только на одной машине и не создавалось экземпляра одного и того же бота - это вызывает ошибки
fly.toml - auto_stop_machines = false

+ Celery, Redis, Flower
5. Для запуска celery, redis, flower в docker-compose.yml необходимо указывать подключение к redis следующим образом:
"redis://localhost:6379"
Причина: 

When you run docker-compose, it creates a new network under which all your containers are running. Docker engine also creates an internal 
routing which allows all the containers to reference each other using their names.

In your case, your web and celery containers were trying to access redis over localhost. But inside the container, 
localhost means their own localhost. You need to change the configuration to point the hostname to the name of the container.

If you were not using docker, but had different machines for each of your container, localhost would have meant their own server. 
In order to connect to redis server, you would have passed the IP address of the machine on which redis was running. 
In docker, instead of IP address, you can just pass the name of the container because of the engine's routing discussed above.

Note that you can still assign static IP addresses to each of your container, and use those IP addresses instead of container_names. For more details, 
read the networking section of docker documents.

6. pip install celery[redis] redis Flower
7. celeryconfig.py, tasks.py
8. docker-compose.yml 
